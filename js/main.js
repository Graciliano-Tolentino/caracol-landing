// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üåê main.js v6.0 ‚Äî N√∫cleo Modular Inteligente (Caracol)
// Compat√≠vel com carrossel inline e din√¢mico, seguro para SSR, SPA e fallback JS
// Autor: Graciliano Tolentino ‚Äî Excel√™ncia T√©cnica Sul-Americana
// Classifica√ß√£o realista: 12/10 ‚Äî Estabilidade, Modularidade e Performance
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"use strict";

// üåç Caminhos centralizados dos componentes HTML
const componentes = {
  header: "components/header.html",
  form: "components/form.html",
  footer: "components/footer.html"
};

/**
 * üöÄ Carrega e injeta um componente HTML por ID
 * @param {string} id - ID do container
 * @param {string} caminho - Caminho do arquivo HTML
 * @param {Function|null} callback - Executa ap√≥s inje√ß√£o
 */
async function carregarComponente(id, caminho, callback = null) {
  const container = document.getElementById(id);
  if (!window.fetch || !container) {
    console.warn(`‚ö†Ô∏è Navegador ou container incompat√≠vel: ${id}`);
    return;
  }

  try {
    const resposta = await fetch(caminho);
    if (!resposta.ok) throw new Error(`Erro HTTP ${resposta.status} ao carregar ${caminho}`);
    const html = await resposta.text();
    container.innerHTML = html;
    container.dataset.loaded = "true";

    const scripts = container.querySelectorAll("script");
    scripts.forEach((oldScript) => {
      const novo = document.createElement("script");
      if (oldScript.src) {
        novo.src = oldScript.src;
        novo.defer = true;
      } else {
        novo.textContent = oldScript.textContent;
      }
      document.body.appendChild(novo);
    });

    if (typeof callback === "function") callback();
  } catch (erro) {
    console.error(`‚ùå Falha ao carregar ${caminho}:`, erro);
    container.innerHTML = `<div class="toast-erro">Erro ao carregar <strong>${caminho}</strong></div>`;
  }
}

/**
 * üß© Carrega os componentes e inicializa l√≥gicas espec√≠ficas
 */
async function carregarTodosComponentes() {
  await Promise.all([
    carregarComponente("header-container", componentes.header),
    carregarComponente("form-container", componentes.form, () => {
      if (typeof inicializarFormulario === "function") {
        try {
          inicializarFormulario();
        } catch (erro) {
          console.warn("‚ö†Ô∏è Erro ao inicializar formul√°rio:", erro);
        }
      }
    }),
    carregarComponente("footer-container", componentes.footer)
  ]);
}

/**
 * üé† Inicializa carrossel se presente no DOM
 */
function inicializarCarrosselSeExistir() {
  const container = document.querySelector(".carrossel-container");
  if (container && typeof Carousel === "function") {
    try {
      new Carousel(container);
    } catch (erro) {
      console.warn("‚ö†Ô∏è Erro ao instanciar carrossel:", erro);
    }
  }
}

// üîÅ Inicializa√ß√£o segura e progressiva
document.addEventListener("DOMContentLoaded", () => {
  try {
    carregarTodosComponentes();
    inicializarCarrosselSeExistir(); // garante funcionamento inline
  } catch (erro) {
    console.error("‚ùå Falha geral na inicializa√ß√£o:", erro);
  }
});
